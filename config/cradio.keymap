// Copyright (c) 2022 The ZMK Contributors
// SPDX-License-Identifier: MIT

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

// Home row mods macro
// #define HRML(k1,k2,k3,k4) &ht LSHFT k1  &ht LALT k2  &ht LCTRL k3  &ht LGUI k4
// #define HRMR(k1,k2,k3,k4) &ht RGUI k1  &ht RCTRL k2  &ht RALT k3  &ht RSHFT k4

/ {
    behaviors {
        ht: hold_tap {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            flavor = "tap-preferred";
            tapping-term-ms = <220>;
            quick-tap-ms = <150>;
            require-prior-idle-ms = <100>;
            bindings = <&kp>, <&kp>;
        };
    };

    conditional_layers {
        compatible = "zmk,conditional-layers";

        tri_layer {
            if-layers = <1 2>;
            then-layer = <3>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
&kp Q           &kp W       &kp F             &kp P        &kp G            &kp J      &kp L        &kp U              &kp Y       &kp SEMICOLON
&ht LEFT_GUI A  &ht LALT R  &ht LEFT_SHIFT S  &ht LCTRL T  &kp D            &kp H      &ht RCTRL N  &ht RIGHT_SHIFT E  &ht RALT I  &ht RIGHT_GUI O
&kp Z           &kp X       &kp C             &kp V        &kp B            &kp K      &kp M        &kp COMMA          &kp DOT     &kp FSLH
                                              &mo 4        &kp BACKSPACE    &kp SPACE  &mo 5
            >;
        };

        right_layer {
            bindings = <
&kp INS     &kp N1  &kp N2  &kp N3  &trans     &kp HOME  &kp PG_DN  &kp PG_UP  &kp END    &kp COLON
&kp DEL     &kp N4  &kp N5  &kp N6  &trans     &kp LEFT  &kp DOWN   &kp UP     &kp RIGHT  &kp SEMI
&caps_word  &kp N7  &kp N8  &kp N9  &kp N0     &trans    &trans     &trans     &trans     &trans
                            &trans  &kp ESC    &trans    &trans
            >;
        };

        left_layer {
            bindings = <
&trans    &kp LBKT  &kp LBRC  &kp RBRC  &trans       &kp CARET  &kp LPAR   &kp RPAR   &kp RBKT  &kp TILDE
&kp EXCL  &kp AT    &kp HASH  &kp DLLR  &kp PRCNT    &kp ASTRK  &kp MINUS  &kp EQUAL  &kp BSLH  &kp GRAVE
&trans    &trans    &trans    &trans    &trans       &kp AMPS   &kp UNDER  &kp PLUS   &kp PIPE  &trans
                              &trans    &trans       &trans     &trans
            >;
        };

        tri_layer {
            bindings = <
&sys_reset   &trans  &trans  &trans      &bt BT_SEL 0    &trans  &kp EXCL  &kp QUESTION  &kp PIPE    &trans
&bootloader  &trans  &trans  &trans      &bt BT_SEL 1    &trans  &kp AMPS  &kp CARET     &kp TILDE   &kp GRAVE
&trans       &trans  &trans  &bt BT_CLR  &bt BT_SEL 2    &trans  &kp AT    &kp PERCENT   &kp DOLLAR  &trans
                             &trans      &trans          &trans  &trans
            >;
        };

        nav_layer {
            bindings = <
&trans   &trans   &trans     &trans     &trans       &trans  &kp HOME  &kp UP    &kp END    &trans
&kp ESC  &kp TAB  &kp LSHFT  &kp LCTRL  &kp ENTER    &trans  &kp LEFT  &kp DOWN  &kp RIGHT  &kp ENTER
&trans   &trans   &trans     &trans     &trans       &trans  &trans    &trans    &trans     &trans
                             &trans     &trans       &trans  &trans
            >;
        };

        sym_num_layer {
            bindings = <
&kp HASH       &kp STAR          &kp LEFT_BRACE        &kp RIGHT_BRACE        &kp PLUS     &kp FSLH  &kp N7  &kp N8  &kp N9  &kp SEMI
&kp DQT        &kp SQT           &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS  &kp UNDER    &kp N0    &kp N4  &kp N5  &kp N6  &kp EQUAL
&kp LESS_THAN  &kp GREATER_THAN  &kp LEFT_BRACKET      &kp RBKT               &kp MINUS    &kp BSLH  &kp N1  &kp N2  &kp N3  &kp COLON
                                                       &trans                 &trans       &trans    &trans
            >;
        };
    };
};
